generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Stack {
  id         Int      @id @default(autoincrement())
  budgetId   Int
  label      String
  category   String   @default("Not Categorized")
  amount     Float    @default(0)
  created_at DateTime @default(now())

  user   user? @relation(fields: [userId], references: [id])
  userId Int?
  @@unique([budgetId, label], name: "budgetId_label_idx")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  description String
  stack       String
  amount      Float
  type        String
  userId      Int
  date        DateTime
  createdAt   DateTime @default(now()) @map("created_at")
  user        user     @relation(fields: [userId], references: [id])

}

model account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map("compound_id")
  userId             Int       @map("user_id")
  providerType       String    @map("provider_type")
  providerId         String    @map("provider_id")
  providerAccountId  String    @map("provider_account_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @default(now()) @map("updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token")
  accessToken  String   @unique @map("access_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")

  @@map("sessions")
}

model user {
  id            Int           @id @default(autoincrement())
  name          String?
  email         String        @unique
  emailVerified DateTime?     @map("email_verified")
  image         String?
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @default(now()) @map("updated_at")
  stacks        Stack[]
  transactions  Transaction[]
  bankAccounts  BankAccout[]

  @@map("users")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")

  @@map("verification_requests")
}

model BankAccout {
  id               Int      @id @default(autoincrement())
  plaidAccessToken String
  plaidItemId      String   @unique
  plaidAccountIds  String[]
  userId           Int
  user             user     @relation(fields: [userId], references: [id])
}
